webpackJsonp([10],{805:function(n,e,o){var a=o(8),t=o(45),l=o(297).PageRenderer;l.__esModule&&(l=l.default);var r=t({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(819)}},componentWillMount:function(){},render:function(){return a.createElement(l,Object.assign({},this.props,{content:this.state.content}))}});r.__catalog_loader__=!0,n.exports=r},819:function(n,e){n.exports="#### Controls\n\n---\n\n- **`mode: string: 'list'`** Behaviour mode: 'list', 'tags', 'counter', 'single'\n\n- **`options: array`** Array of options to select from: **Required**\n\n```code\nlang: js\n---\n[\n  { value: 'red', label: 'Red' },\n  { value: 'blue', label: 'Blue' }\n]\n```\n\n\n- **`value: array: []`** Array of preselected options:\n\n```code\nlang: js\n---\n[ 'red', 'blue' ]\n```\n\n\n- **`disabled: boolean: false`** Disable component\n\n- **`enableSearch: boolean: false`** Enables search field\n\n- **`id: string`** ID attribute of the container\n\n- **`isLoading: boolean: false`** Shows loading indicator\n\n- **`hasSelectAll: boolean: false`** Shows 'Select All'\n\n- **`maxOptionsToRender: number: undefined`** Max options to render\n\n- **`resetable: boolean: false`** Add delete button to reset value\n\n- **`resetTo: array: []`** Value to be reset to\n\n- **`shouldToggleOnHover: boolean: false`** Toggle drop-down on hover\n\n- **`stopClickPropagation: boolean: false`** Stop Header click event propagation\n\n\n\n#### Labels / Placeholders\n\n---\n\n- **`allSelectedLabel: string: 'All items are selected'`** Label for all selected items\n\n- **`counterLabel: string: undefined`** Value Label for 'counter' mode\n\n- **`searchPlaceholder: string: 'Search'`** Search field placeholder\n\n- **`searchMorePlaceholder: string: 'Search to see more ...'`** If 'maxOptionsToRender' is defined\n\n- **`selectAllLabel: string: 'Select All'`** Select All label\n\n- **`valuePlaceholder: string: 'Select ...'`** Value placeholder\n\n\n\n#### Events\n\n---\n\n- **`onBlur: function`** On Blur:\n\n```code\nlang: js\n---\nonBlur(value) {\n  // value - array of selected values, see 'value' property\n}\n```\n\n\n- **`onChange: function`** On Change:\n\n```code\nlang: js\n---\nonChange(value) {\n  // value - array of selected values, see 'value' property\n}\n```\n\n\n- **`onClose: function`** On Close:\n\n```code\nlang: js\n---\nonClose(value) {\n  // value - array of selected values, see 'value' property\n}\n```\n\n\n\n#### Helpers\n\n---\n\n- **`filterOptions: function`** Filter / Search:\n\n```code\nlang: js\n---\nfilterOptions(options, text) {\n  // options - see 'options' property\n  // text - search string\n  \n  return - array of filtered options\n}\n```\n\n\n\n#### Renderers\n\n---\n\n- **`Arrow: function`** DropDown Arrow:\n\n```code\nlang: js\n---\n({options, value, expanded, hasFocus, disabled}) => {\n  // options: array - see 'options' prop \n  // value: array - see 'value' property\n  // expanded: boolean - expanded component status\n  // hasFocus: boolean - hasFocus component status\n  // disabled: boolean - disabled component status\n  \n  return - component to render custom Arrow\n}\n```\n\n\n- **`Loading: function`** Loading Indicator:\n\n```code\nlang: js\n---\n() => {\n  return - component to render custom Loading Indicator\n}\n```\n\n\n- **`Option: function`** Option:\n\n```code\nlang: js\n---\n({checked, option, isSingle}) => {\n  // option: object - from options props: { value, label }  \n  // checked: boolean - define if option is checked\n  // isSingle: boolean - single selection mode\n  \n  return - component to render custom Option\n}\n```\n\n\n- **`Tag: function`** Tag:\n\n```code\nlang: js\n---\n({label, index, removableTag, onTagRemove}) => {\n  // label: string - tag label\n  // index: number - tag index in array used in removal \n  // removableTag: boolean - display/hide remove tag button\n  // onTagRemove: function - callback to remove selected tag\n\n  return - component to render custom Tag\n}\n```\n\n\n- **`Value: function`** Value:\n\n```code\nlang: js\n---\n({value, options}) => {\n  // options: array - see 'options' property\n  // value: array - see 'value' property\n  \n  return - component to render custom Value\n}\n```\n"}});
//# sourceMappingURL=10.549963f7.chunk.js.map