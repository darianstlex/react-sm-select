{"version":3,"sources":["webpack:///static/12.4d9b3e60.chunk.js","webpack:///./catalog/install.md?8b36","webpack:///./catalog/install.md"],"names":["webpackJsonp","803","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","817"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAgBD,EAAQ,GACxBE,EAA2BF,EAAQ,IACnCG,EAAuBH,EAAQ,KAASG,YACxCA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAST,EAAQ,OAEjCU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/12.4d9b3e60.chunk.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(8);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(297).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(817)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../node_modules/raw-loader/index.js!./install.md\", function() {\n            component.setState({\n              content: require(\"!!../node_modules/raw-loader/index.js!./install.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module, exports) {\n\nmodule.exports = \"> Single/Multi Select React Component\\n\\n## Installation\\n\\nInstall the react-sm-select npm package:\\n\\n```code\\nnpm install react-sm-select\\n```\\n\\n### Usage\\n\\n```code\\nimport { MultiSelect } from 'react-sm-select';\\nimport 'react-sm-select/dist/styles.css';\\n\\n.........\\n\\nstate = {\\n  options: [\\n    { value: 'red', label: 'Red' },\\n    { value: 'blue', label: 'Blue' }\\n  ],\\n  value: ['blue']\\n}\\n\\n.........\\n\\n<MultiSelect\\n  id=\\\"some-id\\\"\\n  options={this.state.options}\\n  value={this.state.value}\\n  onChange={value => this.setState({ value })}\\n/>\\n```\\n\\n### Styling\\n\\nCSS can be overrided, see compiled css. Or use scss variables for general styling.\\n\\n```code\\n@import 'react-sm-select/dist/variables';\\n\\n$SM-white: #fff;\\n$SM-brightGrey: #ebf5ff;\\n$SM-smoothGray: #f3f3f3;\\n$SM-lightGrey: #cfd4d9;\\n$SM-lightBlue: #1298d4;\\n$SM-grey: #949ca6;\\n$SM-darkBlue: #143154;\\n$SM-shadowBlue: rgba(18,152,212,0.5);\\n\\n// General Colors\\n$SM-backgroundColor: $SM-white;\\n$SM-focusColor: $SM-lightBlue;\\n$SM-mutedColor: $SM-grey;\\n$SM-borderColor: $SM-grey;\\n$SM-textColor: $SM-darkBlue;\\n\\n// Value Colors\\n$SM-headerSelectedColor: $SM-shadowBlue;\\n$SM-valueColor: $SM-textColor;\\n$SM-valuePlaceholderColor: $SM-mutedColor;\\n\\n$SM-counterColor: $SM-focusColor;\\n\\n$SM-tagColor: $SM-white;\\n$SM-tagBackgroundColor: $SM-focusColor;\\n$SM-tagCloseColor: $SM-textColor;\\n$SM-tagCloseBackgroundColor: $SM-lightGrey;\\n\\n// DropDown Arrow\\n$SM-dropDownArrowColor: $SM-mutedColor;\\n$SM-dropDownActiveArrowColor: $SM-lightBlue;\\n\\n// Search Colors\\n$SM-searchTextColor: $SM-textColor;\\n$SM-searchPlaceholderColor: $SM-mutedColor;\\n$SM-searchSelectedColor: $SM-shadowBlue;\\n\\n// Option Colors\\n$SM-itemTextColor: $SM-textColor;\\n$SM-itemBackgroundHoverColor: $SM-brightGrey;\\n$SM-itemBackgroundFocusColor: $SM-smoothGray;\\n$SM-dividerColor: $SM-lightGrey;\\n$SM-selectAllColor: $SM-itemTextColor;\\n\\n// Size\\n$SM-fieldHeight: 42px;\\n$SM-itemHeight: $SM-fieldHeight - 4px;\\n$SM-borderRadius: 5px;\\n$SM-tagBorderRadius: 3px;\\n$SM-dropDownHeight: 300px;\\n\\n// Other\\n$SM-dropDownZIndex: 1;\\n\\n@import 'react-sm-select/dist/main';\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/12.4d9b3e60.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../node_modules/raw-loader/index.js!./install.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../node_modules/raw-loader/index.js!./install.md\", function() {\n            component.setState({\n              content: require(\"!!../node_modules/raw-loader/index.js!./install.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/install.md\n// module id = 803\n// module chunks = 12","module.exports = \"> Single/Multi Select React Component\\n\\n## Installation\\n\\nInstall the react-sm-select npm package:\\n\\n```code\\nnpm install react-sm-select\\n```\\n\\n### Usage\\n\\n```code\\nimport { MultiSelect } from 'react-sm-select';\\nimport 'react-sm-select/dist/styles.css';\\n\\n.........\\n\\nstate = {\\n  options: [\\n    { value: 'red', label: 'Red' },\\n    { value: 'blue', label: 'Blue' }\\n  ],\\n  value: ['blue']\\n}\\n\\n.........\\n\\n<MultiSelect\\n  id=\\\"some-id\\\"\\n  options={this.state.options}\\n  value={this.state.value}\\n  onChange={value => this.setState({ value })}\\n/>\\n```\\n\\n### Styling\\n\\nCSS can be overrided, see compiled css. Or use scss variables for general styling.\\n\\n```code\\n@import 'react-sm-select/dist/variables';\\n\\n$SM-white: #fff;\\n$SM-brightGrey: #ebf5ff;\\n$SM-smoothGray: #f3f3f3;\\n$SM-lightGrey: #cfd4d9;\\n$SM-lightBlue: #1298d4;\\n$SM-grey: #949ca6;\\n$SM-darkBlue: #143154;\\n$SM-shadowBlue: rgba(18,152,212,0.5);\\n\\n// General Colors\\n$SM-backgroundColor: $SM-white;\\n$SM-focusColor: $SM-lightBlue;\\n$SM-mutedColor: $SM-grey;\\n$SM-borderColor: $SM-grey;\\n$SM-textColor: $SM-darkBlue;\\n\\n// Value Colors\\n$SM-headerSelectedColor: $SM-shadowBlue;\\n$SM-valueColor: $SM-textColor;\\n$SM-valuePlaceholderColor: $SM-mutedColor;\\n\\n$SM-counterColor: $SM-focusColor;\\n\\n$SM-tagColor: $SM-white;\\n$SM-tagBackgroundColor: $SM-focusColor;\\n$SM-tagCloseColor: $SM-textColor;\\n$SM-tagCloseBackgroundColor: $SM-lightGrey;\\n\\n// DropDown Arrow\\n$SM-dropDownArrowColor: $SM-mutedColor;\\n$SM-dropDownActiveArrowColor: $SM-lightBlue;\\n\\n// Search Colors\\n$SM-searchTextColor: $SM-textColor;\\n$SM-searchPlaceholderColor: $SM-mutedColor;\\n$SM-searchSelectedColor: $SM-shadowBlue;\\n\\n// Option Colors\\n$SM-itemTextColor: $SM-textColor;\\n$SM-itemBackgroundHoverColor: $SM-brightGrey;\\n$SM-itemBackgroundFocusColor: $SM-smoothGray;\\n$SM-dividerColor: $SM-lightGrey;\\n$SM-selectAllColor: $SM-itemTextColor;\\n\\n// Size\\n$SM-fieldHeight: 42px;\\n$SM-itemHeight: $SM-fieldHeight - 4px;\\n$SM-borderRadius: 5px;\\n$SM-tagBorderRadius: 3px;\\n$SM-dropDownHeight: 300px;\\n\\n// Other\\n$SM-dropDownZIndex: 1;\\n\\n@import 'react-sm-select/dist/main';\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/install.md\n// module id = 817\n// module chunks = 12"],"sourceRoot":""}