webpackJsonp([3],{812:function(e,n,t){var a=t(8),l=t(45),o=t(297).PageRenderer;o.__esModule&&(o=o.default);var r=l({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(826)}},componentWillMount:function(){},render:function(){return a.createElement(o,Object.assign({},this.props,{content:this.state.content}))}});r.__catalog_loader__=!0,e.exports=r},826:function(e,n){e.exports="### Reset (Clear)\n\n```react\nstate: {\n value: ['red'],\n options: [\n   {value: 'red', label: 'Red'},\n   {value: 'green', label: 'Green'},\n   {value: 'blue', label: 'Blue'},\n   {value: 'brown', label: 'Brown'},\n ],\n}\n---\n<MultiSelect\n  resetable\n  options={state.options}\n  value={state.value}\n  onChange={value => setState({ value })}\n/>\n```\n\n### Reset to Provided\n\n```react\nstate: {\n value: ['green', 'red'],\n options: [\n   {value: 'red', label: 'Red'},\n   {value: 'green', label: 'Green'},\n   {value: 'blue', label: 'Blue'},\n   {value: 'brown', label: 'Brown'},\n ],\n}\n---\n<MultiSelect\n  resetable\n  resetTo={['red']}\n  options={state.options}\n  value={state.value}\n  onChange={value => setState({ value })}\n/>\n```\n"}});
//# sourceMappingURL=3.6ade9be1.chunk.js.map